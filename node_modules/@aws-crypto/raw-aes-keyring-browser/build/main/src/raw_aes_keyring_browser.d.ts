import { KeyringWebCrypto, WebCryptoEncryptionMaterial, WebCryptoDecryptionMaterial, EncryptedDataKey, WebCryptoAlgorithmSuite, AwsEsdkJsCryptoKey } from '@aws-crypto/material-management-browser';
import { WrappingSuiteIdentifier, WrapKey, UnwrapKey } from '@aws-crypto/raw-keyring';
export declare type RawAesKeyringWebCryptoInput = {
    keyNamespace: string;
    keyName: string;
    masterKey: AwsEsdkJsCryptoKey;
    wrappingSuite: WrappingSuiteIdentifier;
};
export declare class RawAesKeyringWebCrypto extends KeyringWebCrypto {
    keyNamespace: string;
    keyName: string;
    _wrapKey: WrapKey<WebCryptoAlgorithmSuite>;
    _unwrapKey: UnwrapKey<WebCryptoAlgorithmSuite>;
    constructor(input: RawAesKeyringWebCryptoInput);
    _filter({ providerId, providerInfo }: EncryptedDataKey): boolean;
    _rawOnEncrypt: (this: RawAesKeyringWebCrypto, material: WebCryptoEncryptionMaterial) => Promise<WebCryptoEncryptionMaterial>;
    _onEncrypt: (material: WebCryptoEncryptionMaterial) => Promise<WebCryptoEncryptionMaterial>;
    _onDecrypt: (this: RawAesKeyringWebCrypto, material: WebCryptoDecryptionMaterial, encryptedDataKeys: EncryptedDataKey[]) => Promise<WebCryptoDecryptionMaterial>;
    static importCryptoKey(masterKey: Uint8Array, wrappingSuite: WrappingSuiteIdentifier): Promise<AwsEsdkJsCryptoKey>;
}
//# sourceMappingURL=raw_aes_keyring_browser.d.ts.map