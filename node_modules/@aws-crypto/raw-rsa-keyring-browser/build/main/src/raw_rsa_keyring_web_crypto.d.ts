import { KeyringWebCrypto, WebCryptoEncryptionMaterial, WebCryptoDecryptionMaterial, EncryptedDataKey, MixedBackendCryptoKey, WebCryptoAlgorithmSuite, AwsEsdkJsCryptoKey } from '@aws-crypto/material-management-browser';
import { WrapKey, UnwrapKey } from '@aws-crypto/raw-keyring';
import { RawRsaKeyringWebCryptoInput, RsaImportableKey } from './types';
export declare class RawRsaKeyringWebCrypto extends KeyringWebCrypto {
    keyNamespace: string;
    keyName: string;
    _wrapKey: WrapKey<WebCryptoAlgorithmSuite>;
    _unwrapKey: UnwrapKey<WebCryptoAlgorithmSuite>;
    constructor(input: RawRsaKeyringWebCryptoInput);
    _filter({ providerId, providerInfo }: EncryptedDataKey): boolean;
    _rawOnEncrypt: (this: RawRsaKeyringWebCrypto, material: WebCryptoEncryptionMaterial) => Promise<WebCryptoEncryptionMaterial>;
    _onEncrypt: (material: WebCryptoEncryptionMaterial) => Promise<WebCryptoEncryptionMaterial>;
    _onDecrypt: (this: RawRsaKeyringWebCrypto, material: WebCryptoDecryptionMaterial, encryptedDataKeys: EncryptedDataKey[]) => Promise<WebCryptoDecryptionMaterial>;
    static importPublicKey(publicKey: RsaImportableKey): Promise<AwsEsdkJsCryptoKey>;
    static importPrivateKey(privateKey: RsaImportableKey): Promise<AwsEsdkJsCryptoKey | MixedBackendCryptoKey>;
}
//# sourceMappingURL=raw_rsa_keyring_web_crypto.d.ts.map