declare type MaybeSubtleCrypto = SubtleCrypto | false;
export declare type WebCryptoBackend = FullSupportWebCryptoBackend | MixedSupportWebCryptoBackend;
export declare type FullSupportWebCryptoBackend = {
    subtle: SubtleCrypto;
    randomValues: (byteLength: number) => Uint8Array;
};
export declare type MixedSupportWebCryptoBackend = {
    zeroByteSubtle: SubtleCrypto;
    nonZeroByteSubtle: SubtleCrypto;
    randomValues: (byteLength: number) => Uint8Array;
};
export declare function webCryptoBackendFactory(window: Window): {
    getWebCryptoBackend: () => Promise<WebCryptoBackend>;
    configureFallback: (fallback: SubtleCrypto) => Promise<SubtleCrypto | undefined>;
};
export declare function getNonZeroByteBackend(backend: WebCryptoBackend | false): SubtleCrypto;
export declare function getZeroByteSubtle(backend: WebCryptoBackend | false): SubtleCrypto;
export declare function windowRequiresFallback(window: Window): Promise<boolean>;
export declare function pluckSubtleCrypto(window: Window): MaybeSubtleCrypto;
export declare function isFullSupportWebCryptoBackend(backend: WebCryptoBackend): backend is FullSupportWebCryptoBackend;
export {};
//# sourceMappingURL=backend-factory.d.ts.map