import { KmsKeyringInput, KMSConstructible, KmsClientSupplier, getClient, limitRegions, excludeRegions, cacheClients } from '@aws-crypto/kms-keyring';
import { WebCryptoAlgorithmSuite, WebCryptoEncryptionMaterial, WebCryptoDecryptionMaterial, EncryptedDataKey } from '@aws-crypto/material-management-browser';
import { KMS } from 'aws-sdk';
declare const getKmsClient: KmsClientSupplier<KMS>;
declare const cacheKmsClients: KmsClientSupplier<KMS>;
export declare type KmsKeyringWebCryptoInput = Partial<KmsKeyringInput<KMS>>;
export declare type KMSWebCryptoConstructible = KMSConstructible<KMS, KMS.ClientConfiguration>;
export declare type KmsWebCryptoClientSupplier = KmsClientSupplier<KMS>;
declare const KmsKeyringBrowser_base: import("@aws-crypto/kms-keyring").KmsKeyRingConstructible<WebCryptoAlgorithmSuite, KMS>;
export declare class KmsKeyringBrowser extends KmsKeyringBrowser_base {
    constructor({ clientProvider, keyIds, generatorKeyId, grantTokens, discovery, }?: KmsKeyringWebCryptoInput);
    _onEncrypt(material: WebCryptoEncryptionMaterial): Promise<WebCryptoEncryptionMaterial>;
    _onDecrypt(material: WebCryptoDecryptionMaterial, encryptedDataKeys: EncryptedDataKey[]): Promise<WebCryptoDecryptionMaterial>;
}
export { getClient, cacheKmsClients, getKmsClient, limitRegions, excludeRegions, cacheClients, KMS, };
//# sourceMappingURL=kms_keyring_browser.d.ts.map